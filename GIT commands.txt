
##
Branches
	Timeline with commits
	Master in the main and default branch

Head
	Pointer to last commit on branch

Remote
	Related repository - Not local
	Github, Gitlab, Bitbucket etc


## Git Commits are uniquely identified by a sequence generated based SHA1 algo.


## Git help commands
	git help
    git help config


## Git config settings
	git config --global user.name "Dawn"
	git config --global user.email "adler1889@protonmail.com"
	<#> .gitconfig file is stored in my home/user directory (/home/adler1889). Setting name & email is bare minimum to start using Git.
	git config --list --show-origin ; git config --list --show-scope ;


## Creating a fresh GIT repository
	git init project-name 		 # project-name parameter is optional. If not supplied, Git will initialize the current directory.


## Start with an existing project
	git init 		# inside the project folder run it


## Project : http://www.initializr.com/


## Git status
	git status 		# Shows which files have been modified in the working directory vs Git's staging area.


## Git add
	git add file-name		# Adds the new or newly modified file-name to Git's staging area (index).
	git add .				# Adding All Changed Files


## Git commit
	git commit -m "this is the commit message"		# Commits all files currently in Git's staging area. The -m parameter allows for a commit message directly from the command line.
	git commit -am "new commit message"				# -a parameter with the git commit command to directly commit newly modified tracked files.


## Git reset	(Unstage File)
	git reset HEAD file-name		# Following the above command will "unstage" the specified file from Git's staging area (aka index).


## Git checkout
	git checkout -- file-name		# Backout Working Directory Changes


## Git commit logs
	git log 										# commit index is generated by SHA1 hash
	git log --oneline --graph --decorate --color	# Oneliner comapct commit logs


## Git remove
	git rm file-name				# Removing a file using Git


## Git index update
	git add -u 						# The -u parameter will recursively update Git's staging area regarding deleted/moved files outside of Git. 


## Git move file/folder
	git mv source destination		# The git mv command will move the source (file or folder) to the destination with Git.


## .gitignore
	.gitignore file contains the file name pattern to be ingored/excluded during git new files staging and committing.


## SSH Authentication Commands
	cd ~
	cd .ssh 										# If not present, create it
	
	ssh-keygen -t rsa -C "yourmailid@domain.com"		# generate an SSH key
	# id_rsa file contains private key. Don't share it. 
	# id_rsa.pub file contains public key. Share it as required.

	# Verify SSH authentication
	ssh -T git@github.com


## Git remote add
	git remote add remote-name remote-repository-location 		# Using git remote add command allows us to associate a remote repository. By convention, the first or primary remote repository is named origin.
	git remote add origin git@github.com:adler1889/git-demo.git


## Git remote repo list
	git remote -v


## Git send changes to remote / push
	git push -u remote-name branch-name
	git push remote-name branch-name
	# The git push sends all your local changes (commits) on branch branch-name to the remote named remote-name. The -u parameter is needed the first time you push a branch to the remote.


## Git receive changes from remote / pull
	git pull remote-name branch-name
	# The git pull receives all your remote changes (commits) from the remote named remote-name and on branch branch-name

